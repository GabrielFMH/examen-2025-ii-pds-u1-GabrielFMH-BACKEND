name: Deploy Application

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Railway CLI
      run: npm install -g @railway/cli

    - name: Publish Backend
      run: |
        cd backend
        dotnet publish -c Release -o ./publish

    - name: Link Railway Project
      run: railway link --project ${{ secrets.RAILWAY_PROJECT_ID }}
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_API_KEY }}

    - name: Deploy to Railway
      run: |
        railway deploy \
          --project ${{ secrets.RAILWAY_PROJECT_ID }} \
          --service ${{ secrets.RAILWAY_SERVICE_ID }} \
          --api-key ${{ secrets.RAILWAY_API_KEY }}
      env:
        RAILWAY_API_KEY: ${{ secrets.RAILWAY_API_KEY }}
        RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
        RAILWAY_SERVICE_ID: ${{ secrets.RAILWAY_SERVICE_ID }}

  deploy-frontend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Vercel CLI
      run: npm install -g vercel

    - name: Build Frontend
      run: |
        cd frontend
        npm install
        npm run build

    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      working-directory: ./frontend

    - name: Build Project Artifacts
      run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      working-directory: ./frontend

    - name: Deploy Project Artifacts to Vercel
      run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
      working-directory: ./frontend